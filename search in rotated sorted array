normal traverse the array using linear search
//Binary Search
#include<iostream>
using namespace std;
int solve(int arr[],int n,int target)
{
    int low=0;
    int high=n-1;
    while(low<=high)
    {
        int mid=low+(high-low)/2;
        if(arr[mid]==target)
        {
            return mid;
        }
        //if left part is sorted:
        if (arr[low] <= arr[mid]) 
        {
            if (arr[low] <= target && target <= arr[mid])
            {
                high = mid - 1;
            }
            else 
            {
                //element does not exist:
                low = mid + 1;
            }
        }
        else
        { //if right part is sorted:
            if (arr[mid] <= target && target <= arr[high]) 
            {
                //element exists:
                low = mid + 1;
            }
            else
            {
                //element does not exist:
                high = mid - 1;
            }
        }
    }
    return -1;
}
int main()
{
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    int target;
    cin>>target;
    cout<<solve(arr,n,target);
    return 0;
}
