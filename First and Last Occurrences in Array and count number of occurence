//using linear search
#include<iostream>
using namespace std;
void solve(int arr[],int n,int target)
{
    int first=-1;
    int last=-1;
    for(int i=0;i<n;i++)
    {
        if(arr[i]==target)
        {
            if(first==-1)
            {
                first=i;
            }
            last=i;
        }
    }
    cout<<first<<" "<<last;
}
int main()
{
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    int target;
    cin>>target;
   solve(arr,n,target);
   return 0;
    
}

//using binary search
#include<iostream>
using namespace std;
int firstOccu(int arr[],int n,int target)
{
    int first=-1;
   int s=0;
   int e=n-1;
   while(s<=e)
   {
       int mid=s+(e-s)/2;
       if(arr[mid]==target)
       {
           first=mid;
           e=mid-1;
       }
       else if(arr[mid]>target)
       {
           e=mid-1;
       }
       else
       {
           s=mid+1;
       }
   }
   return first;
}
int lastOccu(int arr[],int n,int target)
{
    int last=-1;
    int s=0;
    int e=n-1;
    while(s<=e)
    {
        int mid=s+(e-s)/2;
        if(arr[mid]==target)
        {
            last=mid;
            s=mid+1;
        }
        else if(arr[mid]>target)
        {
            e=mid-1;
        }
        else
        {
            s=mid+1;
        }
    }
    return last;
    
}
int main()
{
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    int target;
    cin>>target;
  int ans=firstOccu(arr,n,target);
    int res=lastOccu(arr,n,target);
   cout<<ans<<" "<<res<<endl;
 //this below line use to find the occurence of element in the array
cout<<res-ans+1;
    
}
